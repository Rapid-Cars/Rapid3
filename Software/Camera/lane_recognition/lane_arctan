# Constants
CONSECUTIVE_PIXELS = 5  # Number of pixels in a row for it to count as an edge
MAX_CONSECUTIVE_PIXELS = CONSECUTIVE_PIXELS * 5  # If exceeded, it won't be counted as a lane
THRESHOLD = 70  # Darkness threshold, can be constant or dynamically adjusted
HEIGHT = 240
WIDTH = 320

class MyClassName:
     """
     ToDo: Describe how your class works here
     """
    def __init__(self):
        self.pixel_getter = None

    def setup(self, pixel_getter):
        """
        Initialize with a pixel getter. This function needs to be run once before lane recognition.
        """
        self.pixel_getter = pixel_getter

    def recognize_lanes(self, img):
        """
        Recognizes lanes from a provided image by identifying the edges of the lanes
        using a pixel getter utility. The method determines the positions of the left
        and right lanes relative to the midpoint of the image.

        Parameters
        ----------
        img : any
            The image from which lanes will be recognized.

        Returns
        -------
        tuple
            A tuple containing two lists: `left_lane` and `right_lane`, each representing
            the detected lane edges as determined by the image analysis.

        Raises
        ------
        ValueError
            If the pixel getter has not been set up prior to executing lane recognition.
        """
        if not self.pixel_getter:
            raise ValueError("Pixel getter has not been set up. Call setup() first.")

        right_lane = []
        left_lane = []

        # Use this snippet to get a pixel: pixel = self.pixel_getter.get_pixel(img, x, y)
